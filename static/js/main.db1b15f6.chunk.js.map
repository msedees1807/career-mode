{"version":3,"sources":["theme.js","components/negotiate.js","components/loadingBarJames.js","components/loadingBar.js","components/result.js","data/teams.js","components/teamslist.js","components/negotiationhub.js","App.js","serviceWorker.js","index.js"],"names":["COLOURS","NegotiateButton","styled","button","_templateObject","Negotiate","_this","this","react_default","a","createElement","css","_templateObject2","className","onClick","props","negotiateResult","showTier","buyingTeam","name","tier","React","PureComponent","LoadingBarContainer","div","loadingBarJames_templateObject","LoadingBarFiller","loadingBarJames_templateObject2","percentage","loadingBar_templateObject","loadingBar_templateObject2","LoadingBar","loadingBar_LoadingBarContainer","loadingBar_LoadingBarFiller","ResultContainer","result_templateObject","FinalResult","result_templateObject2","loadingBar_LoadingBar","loadingBar","showTeamWarning","showResult","result","results","_templateObject3","map","i","teams","rating","CardGrid","teamslist_templateObject","TeamItemContainer","teamslist_templateObject2","_ref","selected","_ref2","TeamItem","_ref3","team","selectBuyingTeam","teamsList","teamslist_templateObject3","data","index","teamslist_TeamItem","key","Container","Object","defineProperty","gridTemplateColumns","paddingLeft","paddingRight","margin","display","flexDirection","BasicText","p","negotiationhub_templateObject","negotiationHub","state","userTeam","resultMessage","showEmail","setTimeout","setState","calculateResult","Math","floor","random","concat","negotiationRounds","console","log","_this2","style","class","fontSize","padding","float","teamslist_teamsList","negotiate_Negotiate","result_Negotiate","content","width","backgroundColor","borderRadius","paddingBottom","marginTop","nav","color","position","top","GlobalStlyes","core_browser_esm","styles","App_templateObject","App","Fragment","App_GlobalStlyes","negotiationhub_negotiationHub","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db1b15f6.chunk.js","sourcesContent":["export const BREAKPOINTS = {\n  small: \"@media only screen and (min-width: 512px)\",\n  medium: \"@media only screen and (min-width: 768px)\",\n  normal: \"@media screen and (min-width: 1024px)\",\n  large: \"@media screen and (min-width: 1200px)\"\n};\n\nexport const COLOURS = {\n  primary: \"red\",\n  secondary: \"pink\",\n  textMain: \"red\",\n  textSecondary: \"pink\",\n  green: \"#53ff99fc\",\n  white: \"#ffffff\"\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport \"../App.css\";\n\nconst NegotiateButton = styled.button`\n  box-shadow: 15px 15px 15px 5px #80808014;\n  border-radius: 8px;\n  background-color: rgb(255, 255, 255);\n  transition: transform 0.4s;\n  margin: auto;\n  width: 125px;\n  height: 50px;\n  font-family: \"Oswald\", sans-serif;\n  font-size: 18px;\n\n  &:hover {\n    background-color: #bfffbe;\n    transform: scale(1.05);\n  }\n  &:active {\n    transform: scale(1.05);\n  }\n`;\n\nexport default class Negotiate extends React.PureComponent {\n  render() {\n    return (\n      <div\n        css={css`\n          padding: 8px;\n        `}\n      >\n        <h4 className=\"gridTitle\">2. Begin Negotiations</h4>\n        <NegotiateButton\n          className=\"NegotiateButton\"\n          onClick={() => {\n            this.props.negotiateResult();\n          }}\n        >\n          NEGOTIATE\n        </NegotiateButton>\n        {this.props.showTier && (\n          <p>{this.props.buyingTeam.name} have placed a bid.</p>\n        )}\n        {this.props.showTier && <h5>Tier: {this.props.buyingTeam.tier}</h5>}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { COLOURS } from \"../theme\";\nimport \"../App.css\";\n\nconst LoadingBarContainer = styled.div`\n  position: absolute;\n  height: 30px;\n  z-index: 2;\n  width: 100%;\n  border: 5px solid rgb(105, 105, 105);\n  border-radius: 25px;\n`;\n\nconst LoadingBarFiller = styled.div`\n  background: ${COLOURS.green};\n  position: absolute;\n  z-index: 1;\n  top: 5px;\n  left: 5px;\n  height: 100%;\n  border-radius: 25px;\n  width: ${props => props.percentage}%;\n  transition: ${props => props.percentage === 100 && \"width 3s ease-in\"};\n`;\n\nexport default class LoadingBar extends React.PureComponent {\n  render() {\n    return (\n      <div\n        style={{\n          position: \"relative\",\n          width: \"100%\",\n          paddingRight: \"5px\",\n          height: \"35px\",\n          background: \"lightgray\",\n          borderRadius: \"25px\"\n        }}\n      >\n        <LoadingBarContainer />\n        <LoadingBarFiller percentage={this.props.percentage} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { COLOURS } from \"../theme\";\nimport \"../App.css\";\n\nconst LoadingBarContainer = styled.div`\n  position: relative;\n  height: 20px;\n  background: #d3d3d347;\n  border-radius: 25px;\n`;\n\nconst LoadingBarFiller = styled.div`\n  background: ${COLOURS.green};\n  height: 100%;\n  border-radius: 25px;\n  width: ${props => props.percentage}%;\n  transition: ${props => props.percentage === 100 && \"width 3s ease-in\"};\n`;\n\nexport default class LoadingBar extends React.PureComponent {\n  render() {\n    return (\n      <LoadingBarContainer>\n        <LoadingBarFiller percentage={this.props.percentage} />\n      </LoadingBarContainer>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport LoadingBarJames from \"./loadingBarJames\";\nimport LoadingBar from \"./loadingBar\";\n\nconst ResultContainer = styled.div`\n   {\n    padding-right: 2%;\n    padding-left: 2%;\n  }\n`;\n\nconst FinalResult = styled.div`\n   {\n    min-width: 120px;\n    height: 75px;\n    display: block;\n  }\n`;\n\nexport default class Negotiate extends React.PureComponent {\n  render() {\n    return (\n      <ResultContainer>\n        <h4 className=\"gridTitle\">3. Result</h4>\n        <LoadingBar\n          percentage={this.props.percentage}\n          loadingBar={this.props.loadingBar}\n        />\n        {this.props.showTeamWarning && (\n          <p>Select a team to begin the negotiation.</p>\n        )}\n        <FinalResult>\n          {this.props.showResult != null && (\n            <h3 className=\"ResultText\">\n              {this.props.result ? \"Sell Player\" : \"Keep Player\"}\n            </h3>\n          )}\n        </FinalResult>\n\n        {this.props.results !== [] && (\n          <ul css={css``}>\n            {this.props.results.map((result, i) => (\n              <h3 className=\"ResultText\">{result}</h3>\n            ))}\n          </ul>\n        )}\n      </ResultContainer>\n    );\n  }\n}\n","export const teams = [\n  {\n    name: \"Real Madrid\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"Barcelona\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"Bayern\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"Juventus\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"PSG\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Manchester United\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Manchester City\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Chelsea\",\n    rating: 5,\n    tier: 3\n  },\n  {\n    name: \"Liverpool\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Inter Milan\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"AC Milan\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"Napoli\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"Arsenal\",\n    rating: 5,\n    tier: 3\n  },\n  {\n    name: \"Borussia Dortmund\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"Tottenham Hotspur\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"Athletico Madrid\",\n    rating: 5,\n    tier: 4\n  }\n];\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport \"../App.css\";\nimport { teams } from \"../data/teams\";\nimport { COLOURS } from \"../theme\";\n\nconst CardGrid = styled.div`\n   {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nconst TeamItemContainer = styled.button`\n  box-shadow: 15px 15px 15px 5px #80808014;\n  border-radius: 8px;\n  background-color: ${({ selected }) =>\n    selected ? COLOURS.green : \"#ffffff52\"};\n  color: ${({ selected }) => (selected ? \"black\" : \"#ffffff\")};\n  font-size: 15px;\n  transition: transform 0.2s;\n  width: 125px;\n  height: 50px;\n  margin: 8px;\n  &:hover {\n    background-color: #69ff6675;\n    transform: scale(1.05);\n  }\n`;\n\nconst TeamItem = ({ team, selectBuyingTeam, selected }) => {\n  return (\n    <TeamItemContainer\n      selected={selected}\n      onClick={() => selectBuyingTeam(team)}\n    >\n      {team.name}\n    </TeamItemContainer>\n  );\n};\n\nexport default class teamsList extends React.PureComponent {\n  render() {\n    const { buyingTeam } = this.props;\n\n    return (\n      <div\n        css={css`\n          padding: 8px;\n        `}\n      >\n        <h4>1. Select Bidding Team</h4>\n        <CardGrid>\n          {teams.map((data, index) => (\n            <TeamItem\n              team={data}\n              selectBuyingTeam={this.props.selectBuyingTeam}\n              selected={buyingTeam.name === data.name}\n              key={index}\n            />\n          ))}\n        </CardGrid>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css, jsx } from \"@emotion/core\";\nimport { BREAKPOINTS } from \"../theme\";\nimport Negotiate from \"./negotiate\";\nimport Result from \"./result\";\nimport TeamsList from \"./teamslist\";\nimport { teams } from \"../data/teams\";\n\nconst Container = styled.div({\n  gridTemplateColumns: \"2fr 1fr 1fr\",\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  margin: \"0px auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  [BREAKPOINTS.medium]: {\n    display: \"grid\"\n  }\n});\n\n// THIS DOESNT WORK DUE TO THE BREAKPOINT\n// const Container = styled.div`\n//    {\n//     grid-template-columns: 2fr 1fr 1fr;\n//     padding-left: 20px;\n//     padding-right: 20px;\n//     margin: 0px auto;\n//     display: flex;\n//     flex-direction: column;\n//     [breakpoints.medium]: {\n//       display: grid;\n//     }\n//   }\n// `;\n\nconst BasicText = styled.p`\n   {\n    text-align: left;\n    font-size: 0.7em;\n    padding-left: 30px;\n    padding-right: 30px;\n    background: #ffffffad;\n    color: #34343c;\n    padding: 20px;\n    border-radius: 8px;\n    margin-left: 20px;\n    margin-right: 20px;\n  }\n`;\n\nexport default class negotiationHub extends React.PureComponent {\n  state = {\n    userTeam: null,\n    buyingTeam: { name: \"\" },\n    results: [],\n    resultMessage: null,\n    showEmail: true,\n    showResult: null,\n    showTier: false,\n    showTeamWarning: true,\n    percentage: 0\n  };\n\n  loadingBar = () => {\n    // console.log(\"LOADING BAR CALLEDS\", this.state);\n    setTimeout(() => {\n      if (this.state.percentage !== 100) {\n        this.setState({ percentage: 100 });\n      }\n    }, 10);\n  };\n\n  calculateResult = () => {\n    setTimeout(() => {\n      this.setState({\n        result: Math.floor(Math.random() * 2) === 0,\n        showResult: true,\n        results: this.state.results.concat(this.state.result)\n      });\n    }, 3500);\n  };\n\n  negotiateResult = () => {\n    const { tier } = this.state.buyingTeam;\n\n    const negotiationRounds = 5 - tier;\n\n    // 1. check tier\n    // 2. based on tier run this function x times\n    // 3. added result to array\n\n    this.setState({\n      percentage: 0\n    });\n\n    this.calculateResult();\n    this.loadingBar();\n\n    for (let i = 0; i < negotiationRounds; i++) {\n      switch (this.state.result) {\n        default:\n          break;\n        case true:\n          this.setState({\n            result: \"Keep Player\"\n          });\n          console.log(\"Keep\");\n          break;\n        case false:\n          this.setState({\n            result: \"Sell Player\"\n          });\n          console.log(\"sell\");\n          break;\n\n        // setTimeout(() => {\n        // this.setState({\n        // result: Math.floor(Math.random() * 2) === 0,\n        //   showResult: true,\n        //   results: this.state.results.concat(this.state.result)\n        // });\n        // }, 3500);\n\n        // this.setState({\n        //   results: this.state.results.concat([this.state.result])\n        // });\n      }\n    }\n  };\n\n  selectBuyingTeam = buyingTeam => {\n    this.setState({\n      buyingTeam,\n      results: [],\n      showResult: null,\n      showTier: true,\n      showTeamWarning: false,\n      percentage: 0\n    });\n  };\n\n  render() {\n    // console.log(\"Negotiation Hub State: (Render Method called) \", this.state);\n    return (\n      <div>\n        <h3\n          style={{\n            display: \"inline\"\n          }}\n        >\n          The Negotiation\n        </h3>\n        <i\n          class=\"far fa-envelope nav-email\"\n          style={{\n            fontSize: \"1.7rem\",\n            padding: \"24px\",\n            float: \"left\",\n            display: \"initial\"\n          }}\n          onClick={() => this.setState({ showEmail: true })}\n        />\n        {this.state.showEmail ? (\n          <BasicText>\n            <i\n              class=\"far fa-envelope\"\n              style={{\n                fontSize: \"2rem\",\n                paddingRight: \"10px\"\n              }}\n            />\n            <i\n              class=\"fas fa-window-close\"\n              style={{\n                fontSize: \"2rem\",\n                float: \"right\"\n              }}\n              onClick={() => this.setState({ showEmail: false })}\n            />\n            <b>Dear Mr. Manager,</b>\n            <br />\n            <br />\n            As a small club, larger teams will often look to our players when\n            they become successful. If you receive a bid from one of the\n            following teams, you must use the hub to determine whether the bid\n            is successful. We will allow a\n            <b> maximum of 5 players to leave, per season,</b> as a result of\n            these negotiations. We will not stand in the way of our players'\n            dream club.\n            <br />\n            <br />\n            It is our goal to build a sustainable club by capping our spending\n            on players to <b>£30m</b> per purchase and <b>£50,000</b> per week\n            on salaries for each player.\n            <br />\n            <br />\n            As a result of our financial situation, we currently cannot rely on\n            our youth system, therefore all signings must be made from other\n            clubs.\n            <br />\n            <br />\n            In Summary:\n            <br />\n            - We must sell up to 5 key players per season.\n            <br />\n            - Transfers (Fee + player sign on bonus) are capped at £30m and\n            salaries at £50,000 per week.\n            <br />\n            - No Youth Academy Prospects.\n            <br />\n            - No Free Pre Contract Signings or free agents.\n            <br />\n            <br />\n            <b>The Board.</b>\n          </BasicText>\n        ) : (\n          \"\"\n        )}\n        <Container>\n          <TeamsList\n            selectBuyingTeam={this.selectBuyingTeam}\n            buyingTeam={this.state.buyingTeam}\n          />\n          <Negotiate\n            negotiateResult={this.negotiateResult}\n            buyingTeam={this.state.buyingTeam}\n            result={this.state.result}\n            showTier={this.state.showTier}\n          />\n          <Result\n            result={this.state.result}\n            results={this.state.results}\n            percentage={this.state.percentage}\n            loadingBar={this.loadingBar}\n            showTeamWarning={this.state.showTeamWarning}\n            showResult={this.state.showResult}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport NegotiationHub from \"./components/negotiationhub\";\nimport { Global, css } from \"@emotion/core\";\n\nconst content = {\n  width: \"90%\",\n  backgroundColor: \"rgba(1, 1, 2, 0.72)\",\n  borderRadius: \"8px\",\n  paddingBottom: \"5%\",\n  marginTop: \"10%\"\n};\n\nconst nav = {\n  backgroundColor: \"#333c5ade\",\n  color: \"white\",\n  padding: \"2%\",\n  position: \"fixed\",\n  width: \"100%\",\n  top: \"0\"\n};\n\nconst GlobalStlyes = () => (\n  <Global\n    styles={css`\n      button,\n      p,\n      body,\n      div,\n      html {\n        font-family: \"Oswald\", \"sans-serif\";\n      }\n    `}\n  />\n);\n\nfunction App() {\n  return (\n    <>\n      <GlobalStlyes />\n      <div style={nav}>Career Mode Money Ball</div>\n      <div className=\"App\">\n        <div style={content}>\n          <NegotiationHub />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}