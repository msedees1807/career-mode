{"version":3,"sources":["components/negotiate.js","components/loadingBar.js","components/newLoadingBar.js","components/result.js","data/teams.js","components/teamslist.js","components/negotiationhub.js","App.js","serviceWorker.js","index.js"],"names":["Negotiate","_this","this","react_default","a","createElement","className","onClick","props","negotiateResult","buyingTeam","name","showTier","tier","React","PureComponent","LoadingBarContainer","loadingBar_LoadingBarFiller","percentage","LoadingBarFiller","style","width","concat","newLoadingBar_LoadingBarFiller","LoadingBar","newLoadingBar_LoadingBarContainer","resultContainer","minWidth","height","display","showTeamWarning","result","newLoadingBar_LoadingBar","loadingBar","teams","rating","cardGrid","flexWrap","gridTemplateColumns","gridGap","justifyContent","cardHead","color","fontSize","TeamItem","_ref","team","selectBuyingTeam","teamsList","map","data","index","teamslist_TeamItem","key","negGrid","paddingLeft","paddingRight","margin","negGridItem","alignItems","negotiationHub","state","userTeam","resultMessage","_this$state$buyingTea","setState","setTimeout","console","log","Math","floor","random","Object","assertThisInitialized","teamslist_teamsList","negotiate_Negotiate","result_Negotiate","content","backgroundColor","borderRadius","paddingBottom","App","negotiationhub_negotiationHub","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46fb5d8b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nexport default class Negotiate extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <h3 className=\"gridTitle\">2. Begin Negotiations</h3>\n        <button\n          className=\"NegotiateButton\"\n          onClick={() => {\n            this.props.negotiateResult();\n          }}\n        >\n          <h4 className=\"NegotiateButtonText\">BEGIN</h4>\n        </button>\n        <h4>{this.props.buyingTeam.name}</h4>\n        {this.props.showTier && <h4>Tier: {this.props.buyingTeam.tier}</h4>}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../App.css\";\n\nconst LoadingBarContainer = props => {\n  return (\n    <div className=\"loadingBarContainer\">\n      <LoadingBarFiller percentage={props.percentage} />\n    </div>\n  );\n};\n\nconst LoadingBarFiller = props => {\n  return (\n    <div\n      className=\"loadingBarFiller\"\n      style={{ width: `${props.percentage}%` }}\n    />\n  );\n};\n\nexport default class LoadingBar extends React.PureComponent {\n  //CONSTRUCTOR bind the function ===================\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentage: 0\n    };\n    // this.loading = this.loading.bind(this);\n  }\n\n  //LOADING function ==============================\n  loading = () => {\n    if (this.state.percentage !== 100) {\n      return this.setState({ percentage: 100 });\n    }\n  };\n\n  //RENDER function ================================\n  render() {\n    return (\n      <div>\n        <LoadingBarContainer percentage={this.state.percentage} />\n        <button onClick={this.loading}>Click Me!</button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../App.css\";\n\nconst LoadingBarContainer = props => {\n  return (\n    <div className=\"loadingBarContainer\">\n      <LoadingBarFiller percentage={props.percentage} />\n    </div>\n  );\n};\n\nconst LoadingBarFiller = props => {\n  return (\n    <div\n      className=\"loadingBarFiller\"\n      style={{ width: `${props.percentage}%` }}\n    />\n  );\n};\n\nexport default class LoadingBar extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <LoadingBarContainer percentage={this.props.percentage} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport LoadingBar from \"./loadingBar\";\nimport LoadingBarNew from \"./newLoadingBar\";\n\nconst resultContainer = {\n  minWidth: \"120px\",\n  height: \"75px\",\n  display: \"block\"\n};\n\nexport default class Negotiate extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"ResultContainer\">\n        <h3 className=\"gridTitle\">3. Result</h3>\n        {this.props.showTeamWarning && (\n          <h4>Select a team to begin the negotiation.</h4>\n        )}\n        <div style={resultContainer}>\n          {this.props.result != null && (\n            <h2 className=\"ResultText\">\n              {this.props.result ? \"Sell Player\" : \"Keep Player\"}\n            </h2>\n          )}\n        </div>\n        <LoadingBarNew\n          percentage={this.props.percentage}\n          loadingBar={this.props.loadingBar}\n        />\n      </div>\n    );\n  }\n}\n","export const teams = [\n  {\n    name: \"Real Madrid\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"Barcelona\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"Bayern\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"Juventus\",\n    rating: 5,\n    tier: 1\n  },\n  {\n    name: \"PSG\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Manchester United\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Manchester City\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Chelsea\",\n    rating: 5,\n    tier: 3\n  },\n  {\n    name: \"Liverpool\",\n    rating: 5,\n    tier: 2\n  },\n  {\n    name: \"Inter Milan\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"AC Milan\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"Arsenal\",\n    rating: 5,\n    tier: 3\n  },\n  {\n    name: \"Borussia Dortmund\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"Tottenham Hotspur\",\n    rating: 5,\n    tier: 4\n  },\n  {\n    name: \"Athletico Madrid\",\n    rating: 5,\n    tier: 4\n  }\n];\n","import React from \"react\";\nimport \"../App.css\";\nimport { teams } from \"../data/teams\";\n\nconst cardGrid = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gridTemplateColumns: \"2fr 1fr 1.5fr\",\n  gridGap: \"25px\",\n  justifyContent: \"center\"\n};\n\nconst cardHead = {\n  color: \"#252525\",\n  fontSize: \"16px\",\n  display: \"unset\"\n};\n\nconst TeamItem = ({ team, selectBuyingTeam }) => {\n  return (\n    <div className=\"TeamCard\" onClick={() => selectBuyingTeam(team)}>\n      <h4 style={cardHead}>{team.name}</h4>\n    </div>\n  );\n};\n\nexport default class teamsList extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <h3>1. Select Bidding Team</h3>\n        <div style={cardGrid}>\n          {teams.map((data, index) => (\n            <TeamItem\n              team={data}\n              selectBuyingTeam={this.props.selectBuyingTeam}\n              key={index}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Negotiate from \"./negotiate\";\nimport Result from \"./result\";\nimport TeamsList from \"./teamslist\";\nimport { teams } from \"../data/teams\";\n\nconst negGrid = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr 1fr 1fr\",\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  margin: \"0px auto\"\n};\n\nconst negGridItem = {\n  display: \"flex\",\n  alignItems: \"flex-end\"\n};\n\nexport default class negotiationHub extends React.PureComponent {\n  state = {\n    userTeam: null,\n    buyingTeam: { name: \"\" },\n    result: null,\n    resultMessage: null,\n    showTier: false,\n    showTeamWarning: true,\n    percentage: 0\n  };\n\n  negotiateResult = () => {\n    const { name, tier } = this.state.buyingTeam;\n    const { percentage } = this.state;\n\n    const object = {\n      name,\n      tier\n    };\n    this.setState({ result: null, percentage: 0 });\n    this.loadingBar();\n    setTimeout(() => {\n      console.log(\"Setting result\", percentage);\n      this.setState({\n        result: Math.floor(Math.random() * 2) === 0\n      });\n    }, 3500);\n  };\n\n  selectBuyingTeam = buyingTeam => {\n    this.setState({\n      buyingTeam,\n      result: null,\n      showTier: true,\n      showTeamWarning: false\n    });\n  };\n\n  loadingBar = () => {\n    console.log(\"CLICKEd\", this);\n    if (this.state.percentage !== 100) {\n      return this.setState({ percentage: 100 });\n    }\n  };\n\n  render() {\n    console.log(\"Negotiation Hub State: (Render Method called) \", this.state);\n    return (\n      <div>\n        <h2>The Negotiation</h2>\n        <p className=\"introText\">\n          As a small club, larger teams will often look to your players when\n          they become successful. If you receive a bid from one of the following\n          teams, you must use the hub to determine whether the bid is\n          successful.\n        </p>\n        <div style={negGrid}>\n          <TeamsList\n            selectBuyingTeam={this.selectBuyingTeam}\n            style={negGridItem}\n          />\n          <Negotiate\n            style={negGridItem}\n            negotiateResult={this.negotiateResult}\n            buyingTeam={this.state.buyingTeam}\n            result={this.state.result}\n            showTier={this.state.showTier}\n          />\n          <Result\n            result={this.state.result}\n            style={negGridItem}\n            percentage={this.state.percentage}\n            loadingBar={this.loadingBar}\n            showTeamWarning={this.state.showTeamWarning}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport NegotiationHub from \"./components/negotiationhub\";\n\nconst content = {\n  width: \"90%\",\n  backgroundColor: \"#0000009c\",\n  borderRadius: \"8px\",\n  paddingBottom: \"5%\"\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h3>Career Mode Money Ball</h3>\n      <div style={content}>\n        <NegotiationHub />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}